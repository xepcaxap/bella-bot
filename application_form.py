from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler, CommandHandler, MessageHandler, CallbackQueryHandler, filters

# –í–æ–ø—Ä–æ—Å—ã –ø–æ –∞–Ω–∫–µ—Ç–µ
QUESTIONS = [
    "üÜî –û—Ç–∫—É–¥–∞ –≤—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª–∏?\n–ü—Ä–∏–º–µ—Ä: –†–µ–∫–ª–∞–º–∞ –≤ –∫–∞–Ω–∞–ª–µ",
    "üî†üî† –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π UID\n–ü—Ä–∏–º–µ—Ä: 1234567890123456789",
    "üî†üî† –í–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫\n–ü—Ä–∏–º–µ—Ä: Ghost",
    "üéÆ –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ –≤ CoD: Mobile?\n–ü—Ä–∏–º–µ—Ä: 2 –≥–æ–¥–∞",
    "üì∏ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è",
    "üèÜ –•–æ—Ç–µ–ª–∏ –±—ã –≤—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–±—è –≤ —Å–æ—Å—Ç–∞–≤–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö? (–î–∞ / –ù–µ—Ç)",
    "üïí –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–≥—Ä–æ–≤–æ–µ –ø—Ä–∞–π–º-–≤—Ä–µ–º—è –∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å.\n–ü—Ä–∏–º–µ—Ä: 18:00-20:00 –º—Å–∫",
    "ü§ù –ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö? (–î–∞ / –ù–µ—Ç)",
    "üéØ –ö–∞–∫–∏–µ —Ä–µ–∂–∏–º—ã –∏–≥—Ä—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?\n–ü—Ä–∏–º–µ—Ä: –ù–∞–π—Ç–∏ –∏ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å, –û–ø–æ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç, –ö–æ—Ä–æ–ª–µ–≤—Å–∫–∞—è –±–∏—Ç–≤–∞",
    "üéô –ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ª–∏ –≤—ã –º–∏–∫—Ä–æ—Ñ–æ–Ω? (–î–∞ / –ù–µ—Ç)"
]

user_answers = {}
ADMIN_CHAT_ID = -4666012091

START, QUESTION = range(2)

async def start_application(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="start_form")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "üìé–ì–æ—Ç–æ–≤ –≤—Å—Ç—É–ø–∏—Ç—å –≤ —Ä—è–¥—ã Para Bellum Rebirth? –≠—Ç–æ –¥–æ—Å—Ç–æ–π–Ω—ã–π –≤—ã–±–æ—Ä.\n\n"
        "üìé–ü—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –Ω–µ–º–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–µ–π.\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É.",
        reply_markup=reply_markup
    )
    return START

async def button_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    user_answers[user_id] = []
    await query.message.reply_text(QUESTIONS[0])
    return QUESTION

async def handle_question(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    answer = update.message.text
    user_answers[user_id].append(answer)
    if len(user_answers[user_id]) < len(QUESTIONS):
        await update.message.reply_text(QUESTIONS[len(user_answers[user_id])])
        return QUESTION
    else:
        summary = ""
        for i, q in enumerate(QUESTIONS):
            summary += f"{q}\n{user_answers[user_id][i]}\n\n"
        await context.bot.send_message(
            chat_id=ADMIN_CHAT_ID,
            text=f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{update.message.from_user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}:\n\n{summary}"
        )
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –æ—Ñ–∏—Ü–µ—Ä–∞–º Para Bellum.")
        return ConversationHandler.END

application_handler = ConversationHandler(
    entry_points=[CommandHandler("join", start_application)],
    states={
        START: [CallbackQueryHandler(button_handler, pattern="^start_form$")],
        QUESTION: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_question)],
    },
    fallbacks=[]
)